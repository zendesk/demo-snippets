{
	"info": {
		"_postman_id": "e5aaa5e3-c887-4eb8-b6f2-35392699e595",
		"name": "Zendesk community roadmap",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19383491"
	},
	"item": [
		{
			"name": "Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var data = JSON.parse(responseBody);",
							"pm.globals.set(\"token\", data.token);",
							"",
							"pm.test(\"Token\", function () {",
							"    pm.expect(data.token).is.not.null;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/hc/api/v2/integration/token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hc",
						"api",
						"v2",
						"integration",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get roadmap root",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"pm.test(\"Products\", function () {",
							"    pm.expect(data.products).is.not.null;",
							"    pm.expect(data.products).is.instanceOf(Array);",
							"});",
							"",
							"if (data.products.length > 0) {",
							"    pm.globals.set(\"productKey\", data.products[0].key);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787"
				}
			},
			"response": []
		},
		{
			"name": "Create product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"",
							"pm.test(\"Key\", function () {",
							"    pm.expect(data.key).is.not.null;",
							"});",
							"",
							"pm.globals.set(\"productKey\", data.key);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {",
							"    if (!minValue) {",
							"        minValue = 20;",
							"        maxValue = 20;",
							"    }",
							"",
							"    if (!maxValue) {",
							"        maxValue = minValue;",
							"    }",
							"",
							"    let length = _.random(minValue, maxValue),",
							"        randomString = \"\";",
							"",
							"    for (let i = 0; i < length; i++)",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));",
							"    return randomString;",
							"}",
							"",
							"pm.variables.set('productKeyInput', randomString());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\": \"{{productKeyInput}}\",\n    \"name\": \"Help Center / Guide\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8787/products",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product non-owner",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"pm.test(\"message\", function () {",
							"    pm.expect(data.message).eq(\"Unauthorized user ID '59435347953749' not a member of owners\");",
							"});",
							"pm.test(\"detail\", function () {",
							"    pm.expect(data.detail).is.instanceOf(Array);",
							"    pm.expect(data.detail.length).is.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwib3JpZ2luIjoiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwidXNlcklkIjo1OTQzNTM0Nzk1Mzc0OSwiZW1haWwiOiJ0ZXN0MkB0ZXN0LmNvbSJ9.VYvrYNEJ8QbhOdq2xji__M28KbcbujCR7Vh-tnj30n8",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add to product owners",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"owner\": \"42\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/owners",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"owners"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product owners",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"pm.test(\"owners\", function () {",
							"    pm.expect(data.owners).is.not.null;",
							"    pm.expect(data.owners).is.instanceOf(Array);",
							"    pm.expect(data.owners.length).is.greaterThan(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/owners",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"owners"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create product area",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\": \"hccx\",\n    \"name\": \"Help Center CX\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product area hccx",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas/hccx",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas",
						"hccx"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create product area item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Multiple user segments per article\",\n    \"post_id\": \"360053064113\",\n    \"img_url\": \"https://www.publicdomainpictures.net/pictures/290000/velka/rooster-vintage-banner.jpg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas/hccx/items",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas",
						"hccx",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update product area item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Segment fun\"\n}"
				},
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas/hccx/items/360053064113",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas",
						"hccx",
						"items",
						"360053064113"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product area item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas/hccx/items/360053064113",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas",
						"hccx",
						"items",
						"360053064113"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product area",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}/areas/hccx",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}",
						"areas",
						"hccx"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8787/products/{{productKey}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8787",
					"path": [
						"products",
						"{{productKey}}"
					]
				}
			},
			"response": []
		}
	]
}